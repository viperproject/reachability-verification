/**
    Framing formulas taken from https://people.cs.umass.edu/~immerman/pub/POPL2014.pdf
 */

domain FramingEdgeGraphs {
    function en_mod(EG: Set[Edge], modif:Set[Ref], sigma: Ref): Ref

    axiom ax_EnterMod {
        forall EG:Set[Edge], modif:Set[Ref], sigma:Ref :: 
            { en_mod(EG, modif, sigma) }
                (en_mod(EG, modif, sigma) == null 
                    && (forall alpha:Ref :: 
                        { exists_path(EG, sigma, alpha) } 
                            (alpha in modif) ==> !exists_path(EG, sigma, alpha)))
                || (exists_path(EG, sigma, en_mod(EG, modif, sigma)) 
                    && (en_mod(EG, modif, sigma) in modif) 
                    && (forall alpha:Ref :: 
                        { exists_path(EG, sigma, alpha) }
                        { exists_path(EG, en_mod(EG, modif, sigma), alpha) }
                            exists_path(EG, sigma, alpha) ==> exists_path(EG, en_mod(EG, modif, sigma), alpha)))
    }
}

function apply_ConvexTCFraming(modif: Set[Ref], glob_EG: Set[Edge], old_glob_EG: Set[Edge]): Bool 
    requires READONLY_NODES(modif)
    requires CLOSED(modif)

    // In-In Paths
    ensures (forall sigma:Ref, tau:Ref ::
        { exists_path(glob_EG, sigma, tau) }
        { exists_path(old_glob_EG, sigma, tau) }
        { exists_path($$(modif), sigma, tau) }
            (sigma in modif) && (tau in modif) ==> (
                (exists_path($$(modif), sigma, tau) <==> exists_path(glob_EG, sigma, tau))))

    // Out-In Paths
    ensures (forall sigma:Ref, tau:Ref ::
        { exists_path(glob_EG, sigma, tau) }
        { exists_path(old_glob_EG, sigma, tau) }
        //{ exists_path(glob_EG, en_mod(old_glob_EG, modif, sigma), tau) }
        { exists_path($$(modif), en_mod(old_glob_EG, modif, sigma), tau) }
            !(sigma in modif) && (tau in modif) ==> (
                exists_path(glob_EG, sigma, tau) <==>
                    //exists_path(glob_EG, en_mod(old_glob_EG, modif, sigma), tau)))
                    exists_path($$(modif), en_mod(old_glob_EG, modif, sigma), tau)))

    // In-Out Paths (do not happen in case of convex framing)
    ensures (forall sigma:Ref, tau:Ref :: 
        { exists_path(glob_EG, sigma, tau) }
        { exists_path(old_glob_EG, sigma, tau) }
        { exists_path($$(modif), sigma, tau) }
            (sigma in modif) && !(tau in modif) ==> (
                !exists_path(glob_EG, sigma, tau) && !exists_path($$(modif), sigma, tau) ))

    // Out-Out Paths
    ensures (forall sigma:Ref, tau:Ref :: 
        { exists_path(glob_EG, sigma, tau) }
        { exists_path(old_glob_EG, sigma, tau) }
            !(sigma in modif) && !(tau in modif) ==> (
                exists_path(glob_EG, sigma, tau) <==> 
                    (en_mod(old_glob_EG, modif, sigma) == en_mod(old_glob_EG, modif, tau))
                    && exists_path(old_glob_EG, sigma, tau))) 