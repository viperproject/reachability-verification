method unlink_DAG_next(g: Set[Ref], node:Ref)
    requires PROTECTED_GRAPH(g,node)
    requires node in g
    ensures PROTECTED_GRAPH(g,node)
    ensures node.next == null
    ensures old(node.next) == null ==> $$(g) == old($$(g))
    ensures old(node.next) != null ==> UNLINK__PRECISE_EDGE_UPDATE_FORMULA(g, node, old(node.next))
    ensures old(node.next) != null ==> DAG_UNLINK__PRECISE_TC_UPDATE_FORMULA(g, node, old(node.next))
    ensures acyclic(g)

method link_DAG_next(g:Set[Ref], from:Ref, to:Ref)
    requires PROTECTED_GRAPH(g,from) 
    requires from in g
    requires to != null ==> to in g && to != from // why do we need (to != from)? 
    ensures PROTECTED_GRAPH(g,from)
    ensures from.next == to
    ensures (to == null) ==> $$(g) == old($$(g))
    ensures (to != null) ==> LINK__PRECISE_EDGE_UPDATE_FORMULA(g, from, to)
    ensures (to != null) ==> DAG_LINK__PRECISE_TC_UPDATE_FORMULA(g, from, to)