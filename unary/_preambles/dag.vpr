method unlink_DAG_next(g: Set[Ref], x:Ref)
    requires PROTECTED_GRAPH(g,x)// && acyclic_graph($$(g))
    requires x in g
    ensures PROTECTED_GRAPH(g,x)
    ensures x.next == null
    ensures old(x.next) == null ==> $$(g) == old($$(g))
    ensures old(x.next) != null ==> UNLINK__PRECISE_EDGE_UPDATE_FORMULA(g, x, old(x.next))
    ensures old(x.next) != null ==> DAG_UNLINK__PRECISE_TC_UPDATE_FORMULA(g, x, old(x.next))

method link_DAG_next(g:Set[Ref], x:Ref, y:Ref)
    requires PROTECTED_GRAPH(g,x) 
    requires x in g
    requires y != null ==> y in g && y != x // why do we need (y != x)? 
    ensures PROTECTED_GRAPH(g,x)
    ensures x.next == y
    ensures (y == null) ==> $$(g) == old($$(g))
    ensures (y != null) ==> LINK__PRECISE_EDGE_UPDATE_FORMULA(g, x, y)
    ensures (y != null) ==> DAG_LINK__PRECISE_TC_UPDATE_FORMULA(g, x, y)