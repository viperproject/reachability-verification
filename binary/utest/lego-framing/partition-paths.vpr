import "../../../_preambles/TrCloDomain.vpr"

import "../../../_preambles/framing.vpr"
import "../../../_preambles/legoFraming.vpr"

import "../../../_preambles/macros.vpr"
import "../../../_preambles/memspecs.vpr"
import "../../_preambles/memspecs.vpr"

define __CONVEXITY_CHECKES true

method test1(g: Set[Ref], g1: Set[Ref])
    requires GRAPH(g) && g1 subset g
    requires ACYCLIC(g) 
    requires CONVEX_(g1, g)
    requires CONVEX_(g setminus g1, g)
{
    PartitionPathsInConvexSubHeap(g, g1)
    assert ACYCLIC(g1)

    PartitionPathsInConvexSubHeap(g, g setminus g1)
    assert ACYCLIC(g setminus g1)
}

method test1_neg(g: Set[Ref], g1: Set[Ref])
    requires GRAPH(g) && g1 subset g
    requires ACYCLIC(g) 
    requires CONVEX_(g1, g)
    requires CONVEX_(g setminus g1, g)
    // requires COALIGNED_INTEREDGES(g1, g setminus g1)

    //:: ExpectedOutput(postcondition.violated:assertion.false)
    ensures false
{
    PartitionPathsInConvexSubHeap(g, g1)
    assert ACYCLIC(g1)

    PartitionPathsInConvexSubHeap(g, g setminus g1)
    assert ACYCLIC(g setminus g1)
}
