method unlink_DAG_left(g: Set[Ref], x:Ref)
    requires x in g
    requires PROTECTED_GRAPH_left(g,x)
    ensures PROTECTED_GRAPH_left(g,x)
    ensures x.left == null
    ensures (old(x.left) == null) ==> $$(g) == old($$(g))
    ensures (old(x.left) != null) ==> UNLINK__PRECISE_EDGE_UPDATE_FORMULA(g, x, old(x.left))
    ensures (old(x.left) != null) ==> DAG_UNLINK__PRECISE_TC_UPDATE_FORMULA(g, x, old(x.left))

method unlink_DAG_right(g: Set[Ref], x:Ref)
    requires x in g
    requires PROTECTED_GRAPH_right(g,x)
    ensures PROTECTED_GRAPH_right(g,x)
    ensures x.right == null
    ensures (old(x.right) == null) ==> $$(g) == old($$(g))
    ensures (old(x.right) != null) ==> UNLINK__PRECISE_EDGE_UPDATE_FORMULA(g, x, old(x.right))
    ensures (old(x.right) != null) ==> DAG_UNLINK__PRECISE_TC_UPDATE_FORMULA(g, x, old(x.right))
    
method link_DAG_left(g:Set[Ref], x:Ref, y:Ref)
    requires x in g
    requires y != null ==> y in g && y != x
    requires PROTECTED_GRAPH_left(g,x)
    ensures PROTECTED_GRAPH_left(g,x)
    ensures x.left == y
    ensures (y == null) ==> $$(g) == old($$(g))
    ensures (y != null) ==> LINK__PRECISE_EDGE_UPDATE_FORMULA(g, x, y)
    ensures (y != null) ==> DAG_LINK__PRECISE_TC_UPDATE_FORMULA(g, x, y)

method link_DAG_right(g:Set[Ref], x:Ref, y:Ref)
    requires x in g
    requires y != null ==> y in g && y != x
    requires PROTECTED_GRAPH_right(g,x)
    ensures PROTECTED_GRAPH_right(g,x)
    ensures x.right == y
    ensures y == null ==> $$(g) == old($$(g))
    ensures (y != null) ==> LINK__PRECISE_EDGE_UPDATE_FORMULA(g, x, y)
    ensures (y != null) ==> DAG_LINK__PRECISE_TC_UPDATE_FORMULA(g, x, y)